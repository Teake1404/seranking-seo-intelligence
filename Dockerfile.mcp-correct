# Correct MCP server with proper SEranking API format
FROM node:18-alpine

# Set working directory
WORKDIR /app

# Install dependencies
RUN apk add --no-cache curl

# Create package.json
RUN echo '{"name": "mcp-server", "version": "1.0.0", "main": "server.js", "scripts": {"start": "node server.js"}, "dependencies": {"express": "^4.18.0", "axios": "^1.6.0"}}' > package.json

# Install dependencies
RUN npm install

# Create correct MCP server with proper SEranking API format
RUN echo 'const express = require("express");' > server.js && \
    echo 'const axios = require("axios");' >> server.js && \
    echo 'const app = express();' >> server.js && \
    echo 'app.use(express.json());' >> server.js && \
    echo 'const SERANKING_API_KEY = "b931695c-9e38-cde4-4d4b-49eeb217118f";' >> server.js && \
    echo 'app.get("/health", (req, res) => {' >> server.js && \
    echo '  res.json({status: "healthy", service: "seranking-mcp-correct"});' >> server.js && \
    echo '});' >> server.js && \
    echo 'app.post("/mcp", async (req, res) => {' >> server.js && \
    echo '  try {' >> server.js && \
    echo '    const {params} = req.body;' >> server.js && \
    echo '    console.log("MCP Request:", JSON.stringify(params));' >> server.js && \
    echo '    if (params.tool_name === "domainKeywords") {' >> server.js && \
    echo '      const domain = params.tool_params?.domain || "bagsoflove.co.uk";' >> server.js && \
    echo '      const keywords = params.tool_params?.keywords || ["photo gifts", "personalized gifts"];' >> server.js && \
    echo '      console.log(`Fetching data for ${domain} with keywords: ${keywords.join(", ")}`);' >> server.js && \
    echo '      // Use correct SEranking API format' >> server.js && \
    echo '      const response = await axios.get(`https://api4.seranking.com/v1/keywords/rankings`, {' >> server.js && \
    echo '        headers: {"X-API-KEY": SERANKING_API_KEY},' >> server.js && \
    echo '        params: { ' >> server.js && \
    echo '          domain: domain,' >> server.js && \
    echo '          keywords: keywords.join(","),' >> server.js && \
    echo '          source: "us",' >> server.js && \
    echo '          limit: 10' >> server.js && \
    echo '        }' >> server.js && \
    echo '      });' >> server.js && \
    echo '      console.log("SEranking Response:", response.status, response.data);' >> server.js && \
    echo '      res.json({result: {content: [{text: JSON.stringify(response.data)}]}});' >> server.js && \
    echo '    } else {' >> server.js && \
    echo '      res.json({result: {content: [{text: "[]"}]}});' >> server.js && \
    echo '    }' >> server.js && \
    echo '  } catch (error) {' >> server.js && \
    echo '    console.error("MCP Error:", error.message);' >> server.js && \
    echo '    console.error("Error details:", error.response?.data);' >> server.js && \
    echo '    console.error("Error status:", error.response?.status);' >> server.js && \
    echo '    res.json({result: {content: [{text: "[]"}]}});' >> server.js && \
    echo '  }' >> server.js && \
    echo '});' >> server.js && \
    echo 'const port = process.env.PORT || 3000;' >> server.js && \
    echo 'app.listen(port, "0.0.0.0", () => {' >> server.js && \
    echo '  console.log(`Correct MCP Server running on port ${port}`);' >> server.js && \
    echo '});' >> server.js

# Expose port
EXPOSE 3000

# Start server
CMD ["npm", "start"]
